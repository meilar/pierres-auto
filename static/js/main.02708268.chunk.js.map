{"version":3,"sources":["components/Header.js","components/Lube.js","components/LubeList.js","components/LubeDetail.js","components/LubeForm.js","components/EditLubeForm.js","components/NewLubeForm.js","components/LubeControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","Fragment","className","Lube","props","onClick","onSelectingLube","id","href","name","LubeList","lubeList","map","lube","key","LubeDetail","saleButton","count","Button","onClickingSale","variant","disabled","Card","Body","Title","Subtitle","brand","Text","type","rating","onClickingEdit","onClickingDelete","onClickingClose","LubeForm","body","onSubmit","formSubmissionHandler","placeholder","defaultValue","nameValue","brandValue","ratingValue","typeValue","value","countValue","buttonText","EditLubeForm","handleFormSubmission","event","preventDefault","editedLube","target","formName","formBrand","formRating","formType","parseInt","formCount","v4","console","log","handleSaveEdit","lubeToEdit","this","React","Component","NewLubeForm","newLube","onAddLube","seedData","LubeControl","handleAddClick","setState","prevState","formShowing","handleAddingLube","newArray","state","lubeArray","concat","handleSelectingLube","selectedLube","filter","handleChangingSelectedLube","handleCloseClick","editShowing","handleEditClick","oldId","editedLubeArray","e","handleSalesClick","newValue","updatedLube","handleDeleteClick","newLubeArray","l","mainPanel","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.02708268.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <React.Fragment>\n      <div className='row main-header'>\n        <div className='col-4 header-text border-right'>\n          <p className=\"font-weight-bold\">Oiling you up since 1986.</p>\n          <p className=\"text-lead\">Pierre's Automotive carries a wide variety of automotive oils.\n          Click on the oil name in the list on the left to see a detailed view.</p>\n        </div>\n        <div className='col-8'>\n         <h1 className=\"display-4\"> Pierre's Automotive</h1>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction Lube(props) {\n  return (\n    <React.Fragment>\n      {/* eslint-disable-next-line */}\n      <p><a \n        onClick={() => props.onSelectingLube(props.id)} \n        href=\"#\" \n        className=\"text-primary font-weight-bold\">{props.name}</a></p>\n    </React.Fragment>\n  );\n}\n\nLube.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  onSelectingLube: PropTypes.func\n}\n\nexport default Lube;","import React from 'react';\nimport Lube from './Lube';\nimport PropTypes from \"prop-types\";\n\nfunction LubeList(props) {\n  return (\n    <React.Fragment>\n      <p className=\"font-weight-bold\">Motor Oils Available</p>\n      <hr />\n      {props.lubeList.map((lube) =>\n          <Lube \n          name={lube.name}\n          id={lube.id}\n          key={lube.id}\n          onSelectingLube={props.onSelectingLube}/>\n      )}\n    </React.Fragment>\n  )\n}\n\nLubeList.propTypes = {\n  lubeList: PropTypes.array,\n  onSelectingLube: PropTypes.func,\n}\n\nexport default LubeList;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from \"prop-types\";\n\nfunction LubeDetail(props) {\n\n  let saleButton = null;\n\n  if(props.lube.count > 0) {\n    saleButton = <Button onClick={() => props.onClickingSale(props.lube.id)} variant=\"outline-success\">SALE: 1 Quart</Button>;\n  } else {\n    saleButton = <Button disabled variant=\"secondary\">SOLD OUT</Button>\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"detailRow\">\n        <Card id={\"detailCard\" + props.lube.id} >\n          <Card.Body>\n            <Card.Title>{props.lube.name}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{props.lube.brand}</Card.Subtitle>\n            <Card.Text className='text-warning'>Type: {props.lube.type}</Card.Text>\n            <Card.Text className=\"text-danger\">Rating: {props.lube.rating}</Card.Text>\n            <Card.Text className=\"text-primary\">Quarts remaining: {props.lube.count}</Card.Text>\n            {/* eslint-disable-next-line */}\n            {saleButton}\n            {/* eslint-disable-next-line */}\n            <Button onClick={() => props.onClickingEdit(props.lube.id)} variant=\"outline-warning\">Edit</Button>\n            {/* eslint-disable-next-line */}\n            <Button onClick={() => props.onClickingDelete(props.lube.id)} variant=\"outline-danger\">Delete</Button>\n            {/* eslint-disable-next-line */}\n            <Button onClick={() => props.onClickingClose()} variant=\"outline-dark\">Close</Button>\n          </Card.Body>\n        </Card>\n      </div>\n    </React.Fragment>\n  )\n}\n\nLubeDetail.propTypes = {\n  lube: PropTypes.object,\n  onClickingDelete: PropTypes.func,\n  onClickingSale: PropTypes.func,\n  onClickingEdit: PropTypes.func,\n  onClickingClose: PropTypes.func\n}\n\nexport default LubeDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nfunction LubeForm(props) {\n\n  return (\n    <React.Fragment>\n      <Card body>\n          <form onSubmit={props.formSubmissionHandler}>\n            <label className=\"lubeForm\">Enter Motor Oil Name</label>  \n            <input\n              className=\"form-control lubeForm mb-3\"\n              id=\"formName\"\n              type=\"text\"\n              name=\"formName\"\n              placeholder='Winter Heavy-Duty Blend'\n              defaultValue={props.nameValue} />\n            <label className=\"lubeForm\">Enter Motor Oil Brand</label>  \n            <input\n              className=\"form-control lubeForm mb-3\"\n              id=\"formBrand\"\n              type=\"text\"\n              name=\"formBrand\"\n              placeholder='Pennzoil'\n              defaultValue={props.brandValue} />\n            <label className=\"lubeForm\">Enter Weather Rating</label>  \n            <input\n              className=\"form-control lubeForm mb-3\"\n              id=\"formRating\"\n              type=\"text\"\n              name=\"formRating\"\n              placeholder=\"30S-20\"\n              defaultValue={props.ratingValue} />\n            <label className=\"lubeForm\">Choose an Oil Type</label>    \n            <select\n              name=\"formType\"\n              id=\"formType\" \n              className=\"form-control lubeForm\"\n              defaultValue={props.typeValue}>\n              <option>Choose...</option>\n              <option value=\"Conventional\">Conventional</option>\n              <option value=\"Synthetic\">Synthetic</option>\n              <option value=\"Blend\">Blend</option>\n            </select>\n            <label className=\"lubeForm\">Choose Inventory Amount in Quarts</label>  \n            <input\n              className=\"form-control lubeForm mb-3\"\n              id=\"formCount\"\n              type=\"number\"\n              name=\"formCount\"\n              defaultValue={props.countValue} />\n            <button className=\"btn btn-outline-primary lubeForm\" type='submit'>{props.buttonText}</button>\n            <button className=\"btn btn-outline-danger lubeForm\" type=\"reset\">Reset</button>\n            <button onClick={() => props.onClickingClose} className=\"btn btn-outline-dark lubeForm\">Cancel</button>\n          </form>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nLubeForm.propTypes = {\n  buttonText: PropTypes.string,\n  formSubmissionHandler: PropTypes.func,\n  nameValue: PropTypes.string,\n  brandValue: PropTypes.string,\n  typeValue: PropTypes.string,\n  ratingValue: PropTypes.string,\n  countValue: PropTypes.number,\n  onClickingClose: PropTypes.func\n}\n\nexport default LubeForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport LubeForm from './LubeForm';\nimport { v4 } from 'uuid';\n\nclass EditLubeForm extends React.Component {\n\n  handleFormSubmission = (event) => {\n    event.preventDefault();\n    const editedLube = {\n      name: event.target.formName.value, \n      brand: event.target.formBrand.value, \n      rating: event.target.formRating.value,\n      type: event.target.formType.value,\n      count: parseInt(event.target.formCount.value),\n      id: v4()\n    }\n    console.log(editedLube);\n    this.props.handleSaveEdit(editedLube, this.props.lubeToEdit.id);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <LubeForm\n          buttonText = \"Submit\"\n          formSubmissionHandler = {this.handleFormSubmission}\n          onClickingClose = {this.props.onClickingClose}\n          nameValue = {this.props.lubeToEdit.name}\n          brandValue = {this.props.lubeToEdit.brand}\n          typeValue = {this.props.lubeToEdit.type}\n          ratingValue = {this.props.lubeToEdit.rating}\n          countValue = {this.props.lubeToEdit.count} />\n    </React.Fragment>\n    )\n  }\n\n}\n\nEditLubeForm.propTypes = {\n  onAddLube: PropTypes.func,\n  lubeToEdit: PropTypes.object,\n  handleSaveEdit: PropTypes.func,\n  onClickingClose: PropTypes.func\n}\n\nexport default EditLubeForm;","import React from \"react\";\nimport { v4 } from 'uuid';\nimport PropTypes from \"prop-types\";\nimport LubeForm from \"./LubeForm\";\n\nclass NewLubeForm extends React.Component {\n\n  handleFormSubmission = (event) => {\n    event.preventDefault();\n    const newLube = {\n      name: event.target.formName.value, \n      brand: event.target.formBrand.value, \n      rating: event.target.formRating.value,\n      type: event.target.formType.value,\n      count: parseInt(event.target.formCount.value),\n      id: v4()\n    }\n    console.log(newLube);\n    this.props.onAddLube(newLube);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <LubeForm\n            buttonText = \"Submit\"\n            formSubmissionHandler = {this.handleFormSubmission}\n            onClickingClose = {this.props.onClickingClose}\n            nameValue = \"\"\n            brandValue = \"\"\n            typeValue = \"\"\n            ratingValue = \"\"\n            countValue = {0} />\n      </React.Fragment>\n    )\n  };\n}\n\nNewLubeForm.propTypes = {\n  onAddLube: PropTypes.func,\n  onClickingClose: PropTypes.func\n}\n\nexport default NewLubeForm;","import React from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport LubeList from \"./LubeList\";\nimport LubeDetail from \"./LubeDetail\";\nimport EditLubeForm from \"./EditLubeForm\";\nimport NewLubeForm from './NewLubeForm';\nimport { v4 } from 'uuid';\n\nconst seedData = [\n  {\n  name: \"Advanced European Formula\",\n  brand: \"Mobil 1\",\n  rating: \"0W-40\",\n  type: \"Synthetic\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"STP High Mileage\",\n  brand: \"STP\",\n  rating: \"5W-20\",\n  type: \"Conventional\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"MaxLife High Mileage\",\n  brand: \"Valvoline\",\n  rating: \"10W-30\",\n  type: \"Synthetic\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"GTX Engine Oil\",\n  brand: \"Castrol\",\n  rating: \"10W-30\",\n  type: \"Blend\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"High Mileage Conventional\",\n  brand: \"Pennzoil\",\n  rating: \"5W-20\",\n  type: \"Conventional\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"STP Full Synthetic\",\n  brand: \"STP\",\n  rating: \"5W-30\",\n  type: \"Synthetic\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"All Mileage Synthetic Blend\",\n  brand: \"Quaker State\",\n  rating: \"5W-30\",\n  type: \"Blend\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"EDGE Advanced Engine Oil\",\n  brand: \"Castrol\",\n  rating: \"5W-30\",\n  type: \"Synthetic\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"Platinum High Mileage\",\n  brand: \"Pennzoil\",\n  rating: \"5W-30\",\n  type: \"Synthetic\",\n  count: 20,\n  id: v4()\n},\n{\n  name: \"Diesel Engine Oil\",\n  brand: \"STP\",\n  rating: \"15W-40\",\n  type: \"Conventional\",\n  count: 20,\n  id: v4()\n}\n]\n\nclass LubeControl extends React.Component {\n\n\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      formShowing: false,\n      editShowing: false,\n      lubeArray: seedData,\n      selectedLube: null\n    };\n  }\n\n  // CREATE\n\n  handleAddClick = () => {\n    this.setState(prevState => ({formShowing: !prevState.formShowing}));\n  }\n\n  handleAddingLube = (newLube) => {\n    const newArray = this.state.lubeArray.concat(newLube);\n    this.setState({lubeArray: newArray});\n    this.setState(prevState => ({formShowing: !prevState.formShowing}));\n  }\n\n  // READ\n\n  handleSelectingLube = (id) => {\n    const selectedLube = this.state.lubeArray.filter(lube => lube.id === id)[0];\n    this.setState({selectedLube : selectedLube});\n  }\n\n  handleChangingSelectedLube = (id) => {\n    const selectedLube = this.state.lubeArray.filter(lube => lube.id === id)[0];\n    this.setState({selectedLube: selectedLube});\n  }\n\n  handleCloseClick = () => {\n    this.setState({\n      formShowing: false,\n      editShowing: false,\n      selectedLube: null\n    })\n  }\n\n  //UPDATE\n\n  handleEditClick = (id) => {\n    const selectedLube = this.state.lubeArray.filter(lube => lube.id === id)[0];\n    this.setState({\n      selectedLube : selectedLube,\n      formShowing: false,\n      editShowing: true});\n  }\n\n  handleSaveEdit = (editedLube, oldId) => {\n    const editedLubeArray = this.state.lubeArray\n      .filter(e => e.id !== oldId)\n      .concat(editedLube);\n    this.setState({\n      lubeArray: editedLubeArray,\n      formShowing: false,\n      editShowing: false,\n      selectedLube: null\n    });\n  }\n\n  handleSalesClick = (id) => {\n    const newValue = this.state.lubeArray\n      .filter(lube => lube.id === id)[0]\n      .count - 1;\n    console.log(newValue);\n    const updatedLube = {...this.state.lubeArray.filter(e => e.id === id)[0], count: newValue};\n    const editedLubeArray = this.state.lubeArray\n      .filter(e => e.id !== id)\n      .concat(updatedLube);\n      this.setState({\n        lubeArray: editedLubeArray,\n        selectedLube: null\n      });\n      this.handleSelectingLube(id);\n  }\n\n  //DELETE\n\n  handleDeleteClick = (id) => {\n    const newLubeArray = this.state.lubeArray.filter(l => l.id !==id);\n    this.setState({ lubeArray: newLubeArray, selectedLube: null });\n  }\n\n  //RENDER\n\n  render() {\n    let mainPanel = null;\n\n    if (this.state.formShowing) {\n      mainPanel = <NewLubeForm \n        onAddLube = {this.handleAddingLube}\n        onClickingClose = {this.handleCloseClick}/>\n    } else if (this.state.editShowing) {\n      mainPanel = <EditLubeForm \n        lubeToEdit = {this.state.selectedLube}\n        handleSaveEdit = {this.handleSaveEdit}\n        onClickingClose = {this.handleCloseClick} />\n    } else if (this.state.selectedLube !== null) {\n      mainPanel = <LubeDetail \n        lube = {this.state.selectedLube}\n        onClickingDelete = {this.handleDeleteClick}\n        onClickingEdit = {this.handleEditClick}\n        onClickingSale = {this.handleSalesClick}\n        onClickingClose = {this.handleCloseClick} />\n    }\n    \n    return (\n      <React.Fragment>\n        <div className=\"row content-area\">\n          <div className=\"col-4\">\n            <LubeList \n              lubeList={this.state.lubeArray}\n              onSelectingLube = {this.handleSelectingLube}/>\n            <Button className=\"addButton\" variant=\"outline-success\" onClick={this.handleAddClick}>Add New Oil</Button>\n          </div>\n          <div className=\"col-8\">\n            {mainPanel}\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default LubeControl;","import './../App.css';\nimport Header from './Header';\nimport LubeControl from './LubeControl';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Container >\n          <Header />\n          <LubeControl />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}